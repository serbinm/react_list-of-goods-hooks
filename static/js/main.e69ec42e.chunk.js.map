{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","useState","resetVisible","setResetVisible","isReversed","setReversed","sortBy","setSortBy","visibleGoods","sort","g1","g2","length","localeCompare","reverse","className","type","classNames","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"gPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGWC,EAAgB,WAC3B,MAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA4BJ,mBAAS,QAArC,mBAAOK,EAAP,KAAeC,EAAf,KAiCMC,EAAY,UAAOT,GAoBzB,OAlBAS,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQL,GACN,IAAK,SACH,OAAOI,EAAGE,OAASD,EAAGC,OAExB,IAAK,WACH,OAAOF,EAAGG,cAAcF,GAE1B,QACE,OAAO,MAITP,GACFI,EAAaM,UAKb,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,CACpB,kBAAkB,EAClB,WAAuB,aAAXX,IAEdY,QA3DS,WACfX,EAAU,YACVJ,GAAgB,IAmDZ,iCAWA,wBACEa,KAAK,SACLD,UAAWE,IAAW,CACpB,qBAAqB,EACrB,WAAuB,WAAXX,IAEdY,QAjEW,WACjBX,EAAU,UACVJ,GAAgB,IAyDZ,4BAWA,wBACEa,KAAK,SACLD,UAAWE,IAAW,CACpB,qBAAqB,EACrB,YAAab,IAEfc,QAvEQ,WACC,SAAXZ,GAMJD,GAAaD,GACbD,GAAiBC,IANfC,GAAaD,IA+DX,qBAWCF,GACC,wBACEc,KAAK,SACLD,UAAU,4BACVG,QArEI,WACZf,GAAgB,GAChBE,GAAY,GACZE,EAAU,SA+DJ,sBAWJ,6BACE,6BACGC,EAAaW,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,cC5HnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e69ec42e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport const App: React.FC = () => {\n  const [resetVisible, setResetVisible] = useState(false);\n  const [isReversed, setReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('none');\n\n  // onClickStart\n  const sortName = () => {\n    setSortBy('alphabet');\n    setResetVisible(true);\n  };\n\n  const sortLength = () => {\n    setSortBy('length');\n    setResetVisible(true);\n  };\n\n  const reverse = () => {\n    if (sortBy !== 'none') {\n      setReversed(!isReversed);\n\n      return;\n    }\n\n    setReversed(!isReversed);\n    setResetVisible(!isReversed);\n  };\n\n  const reset = () => {\n    setResetVisible(false);\n    setReversed(false);\n    setSortBy('none');\n  };\n\n  // onClickEnd\n\n  // rendering thingsStart\n  const visibleGoods = [...goodsFromServer];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortBy) {\n      case 'length':\n        return g1.length - g2.length;\n\n      case 'alphabet':\n        return g1.localeCompare(g2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // renderingThingsEnd\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames({\n            'button is-info': true,\n            'is-light': sortBy !== 'alphabet',\n          })}\n          onClick={sortName}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames({\n            'button is-success': true,\n            'is-light': sortBy !== 'length',\n          })}\n          onClick={sortLength}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames({\n            'button is-warning': true,\n            'is-light': !isReversed,\n          })}\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n\n        {resetVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={reset}\n          >\n            Reset\n          </button>\n        )}\n\n      </div>\n\n      <ul>\n        <ul>\n          {visibleGoods.map(good => (\n            <li\n              data-cy=\"Good\"\n              key={good}\n            >\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}